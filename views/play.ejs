<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>LocalInvaders</title>
        <link href="/stylesheets/bootstrap.min.css" rel="stylesheet">
        <link href="/stylesheets/style.css" rel="stylesheet">
        <link href="/stylesheets/bootswatch.css" rel="stylesheet">
        <!-- ここからwebFont -->
        <link href='http://fonts.googleapis.com/css?family=Lemon' rel='stylesheet' type='text/css'>
        <style>
            body {
                font-family: 'Lemon', cursive;
            }
        </style>
        <!-- ここまでwebFont -->
        <!-- socket.ioを使えるようにしている -->
        <script src="/socket.io/socket.io.js"></script>
        <link href="/stylesheets/button.css" rel="stylesheet">

    </head>
    <body background="/img/skulls.png">
        <!-- 壁紙 -->

        <nav class="navbar navbar-fixed-top">
            <div class="nav">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <% for(var i=0;i < players.length;i++) { %>
                            <% if(i === 0) { %>
                            <th class="info"><%= players[i].get("name") %></th>
                            <% }else if(i === 1) { %>
                            <th class="success"><%= players[i].get("name") %></th>
                            <% }else if(i === 2) { %>
                            <th class="warning"><%= players[i].get("name") %></th>
                            <% }else if(i === 3) { %>
                            <th class="danger"><%= players[i].get("name") %></th>
                            <% } %>
                            <% } %>
                        </tr>
                    </thead>
                </table>
            </div>
        </nav>
        <!----------------------- ここに実際に地図アプリを実装 ------------------------>
        <div class="container-fluid">
            <div class="row">
                <div id="map" class="col-xs-12 col-md-12">
                    &nbsp;
                </div>
            </div>
            <input type="hidden" id="myid" value="<%= player_id %>"/>
            <input type="hidden" id="myname" value="<%= name %>"/>
        </div>

        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
        <script src="/javascripts/bootstrap.min.js"></script>
        <script type="text/javascript" charset="utf-8" src="//js.api.olp.yahooapis.jp/OpenLocalPlatform/V1/jsapi?appid=dj0zaiZpPUlGUWE3N0JZTm5icSZzPWNvbnN1bWVyc2VjcmV0Jng9MGM-"></script>
        <script type="text/javascript" src="/socket.io/socket.io.js"></script>
        <script type="text/javascript" src="/javascripts/Player.js"></script>
        <script type="text/javascript" src="/javascripts/Target.js"></script>
        <script type="text/javascript" src="/javascripts/Map.js"></script>
        <script type="text/javascript">
            const LOCATION_UPDATE_INTERVAL = 5000;
            $(function() {
                //動作環境チェック
                if (!navigator.geolocation) {
                    alert("GeoLocationAPIに対応していないためｗｗｗｗｗ遊べませんｗｗｗばーかｗｗｗｗｗ");
                    throw new Error("GeoLocationAPIに対応していないためｗｗｗｗｗ遊べませんｗｗｗばーかｗｗｗｗｗ");
                }

                //地図描画について
                //画面いっぱいに地図を広げる
                var $doc = $(document);
                $("#map").css('height', $doc.height() - $("#header").height()).css('width', $doc.width());
                //マーカー等を設定
                var me = new Player({
                    name : $("#myname").val(),
                    id : $("#myid").val()
                });
                //TODO:getする
                var players = [];
                var targets = [];
                var map = new Map();
                //とりあえず書かないと呼び出しの依存性循環…
                map.drawMap(Target.DEN2_DIE.position);
                map.addObjects(players);
                map.addObjects(targets);
                map.addObject(me);

                //socket.ioのconnectionとgeolocationの位置取得が非同期のため細工
                var connectionDeferred = new $.Deferred();
                //socket.ioについて
                var socketio = io.connect("/play", {
                    "reconnect" : true,
                    "force new connection" : true
                });
                socketio.on("connect", function(data) {
                    //接続時
                    //newPlayerメッセージ排出ー＞その後locationUpdateを送る
                    this.emit("newPlayer", {
                        id : me.id,
                        name : me.name
                    }, function(area) {
                        //確実に位置情報を送るために…
                        connectionDeferred.resolve();
                        //エリアを受信
                        var target = new Target({
                            position : new Y.LatLng(area.latitude, area.longitude),
                            radius : area.radius
                        });
                        targets.push(target);
                        map.addObject(target);
                    });
                }).on("disconnect", function(data) {
                    //自分の回線が切れた
                    //切れてちゃ、なにもできない
                    map.removeObject(me);
                }).on("locationUpdate", function(data) {
                    //定期位置アップデート
                    $.each(players, function(i, v) {
                        if (v.id === data.id) {
                            v.setPosition(data).setPositionAccuracy(data);
                        }
                    });
                }).on("newPlayer", function(data) {
                    //新プレイヤー参加
                    var newPlayer = new Player(data);
                    players.push(newPlayer);
                    map.addObject(newPlayer);
                }).on("playerDie", function(data) {
                    //ほかのプレイヤーが消失
                    $.each(players, function(i, v) {
                        if (v.id === data.id) {
                            players.splice(i, 1);
                        }
                    });
                    map.removeObject(data);
                }).on("newArea", function(area) {
                    //新規エリア出現
                    map.removeObject(targets);
                    var target = new Target({
                        position : new Y.LatLng(area.latitude, area.longitude),
                        radius : area.radius
                    });
                    targets.push(target);
                    map.addObject(target);
                }).on("gameEnd", function(data) {
                    //おわり｜NHK
                    document.location = "/result";
                });

                //GeoLocationについて
                var watchId = navigator.geolocation.watchPosition(function(position) {
                    var p = {
                        id : me.id,
                        latitude : position.coords.latitude,
                        longitude : position.coords.longitude,
                        accuracy : position.accuracy
                    };
                    //表示している地図上の位置更新
                    me.setPosition(p);
                    //位置情報をブロードキャスト（細工済み）
                    connectionDeferred.promise().then(function() {
                        socketio.emit("locationUpdate", p);
                        console.log(p);
                    });
                });

            });
        </script>
    </body>
</html>
